#!/usr/bin/env php

<?php

use App\Settings;
use DI\ContainerBuilder;
use Doctrine\Migrations\Configuration\EntityManager\ExistingEntityManager;
use Doctrine\Migrations\Configuration\Migration\ConfigurationArray;
use Doctrine\Migrations\DependencyFactory;
use Doctrine\Migrations\Tools\Console\Command\CurrentCommand;
use Doctrine\Migrations\Tools\Console\Command\DiffCommand;
use Doctrine\Migrations\Tools\Console\Command\DumpSchemaCommand;
use Doctrine\Migrations\Tools\Console\Command\ExecuteCommand;
use Doctrine\Migrations\Tools\Console\Command\GenerateCommand;
use Doctrine\Migrations\Tools\Console\Command\LatestCommand;
use Doctrine\Migrations\Tools\Console\Command\ListCommand;
use Doctrine\Migrations\Tools\Console\Command\MigrateCommand;
use Doctrine\Migrations\Tools\Console\Command\RollupCommand;
use Doctrine\Migrations\Tools\Console\Command\StatusCommand;
use Doctrine\Migrations\Tools\Console\Command\SyncMetadataCommand;
use Doctrine\Migrations\Tools\Console\Command\UpToDateCommand;
use Doctrine\Migrations\Tools\Console\Command\VersionCommand;
use Doctrine\ORM\EntityManager;
use Doctrine\ORM\Tools\Console\ConsoleRunner;
use Doctrine\ORM\Tools\Console\EntityManagerProvider\SingleManagerProvider;
use Dotenv\Dotenv;

require __DIR__ . '/../vendor/autoload.php';

Dotenv::createImmutable(__DIR__ . '/..')->load();

Settings::set((require __DIR__ . '/../src/Configs/settings.php')());

$containerBuilder = new ContainerBuilder();

$containerBuilder->addDefinitions((require __DIR__ . '/../src/Configs/dependencies.php')());

$container = $containerBuilder->build();

/** @var EntityManager $entityManager */
$entityManager = $container->get(EntityManager::class);

$dependencyFactory = DependencyFactory::fromEntityManager(
    new ConfigurationArray(Settings::getArray('doctrine.migrations')),
    new ExistingEntityManager($entityManager)
);

ConsoleRunner::run(new SingleManagerProvider($entityManager), [
  new CurrentCommand($dependencyFactory),
  new DiffCommand($dependencyFactory),
  new DumpSchemaCommand($dependencyFactory),
  new ExecuteCommand($dependencyFactory),
  new GenerateCommand($dependencyFactory),
  new LatestCommand($dependencyFactory),
  new ListCommand($dependencyFactory),
  new MigrateCommand($dependencyFactory),
  new RollupCommand($dependencyFactory),
  new StatusCommand($dependencyFactory),
  new SyncMetadataCommand($dependencyFactory),
  new UpToDateCommand($dependencyFactory),
  new VersionCommand($dependencyFactory)
]);
